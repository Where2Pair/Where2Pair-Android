apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

configurations {
    ajc
    aspects
}

ext.aspectjVersion = '1.7.3'

dependencies {
	compile 'com.google.guava:guava:15.0'
    //Using the SNAPSHOT version until retrofit adds support for iterables
	//compile 'com.squareup.retrofit:retrofit:1.2.2'
	compile 'com.squareup.retrofit:retrofit:1.2.3-SNAPSHOT'
    //compile files('lib/retrofit-1.2.3-SNAPSHOT.jar')
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.robobinding:robobinding:0.8.1'
    compile "org.aspectj:aspectjrt:${aspectjVersion}"
    ajc "org.aspectj:aspectjtools:${aspectjVersion}"
    aspects 'org.robobinding:robobinding:0.8.1'

	testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-core:1.9.5'
	testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.codehaus.groovy:groovy-all:2.1.7'
}

compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    doLast{
        ant.taskdef( resource:'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties', classpath: configurations.ajc.asPath)
        ant.iajc(source:"1.6", target:"1.6", destDir:sourceSets.main.output.classesDir.absolutePath, maxmem:"512m", fork:"true",
                aspectPath:configurations.aspects.asPath,
                sourceRootCopyFilter:"**/.svn/*,**/*.java",classpath:configurations.compile.asPath){
            sourceroots{
                sourceSets.main.java.srcDirs.each{
                    pathelement(location:it.absolutePath)
                }
            }
        }
    }
}